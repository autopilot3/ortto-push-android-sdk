package com.ortto.messaging;

import android.content.Context;

import androidx.annotation.NonNull;
import com.google.firebase.messaging.FirebaseMessagingService;
import com.google.firebase.messaging.RemoteMessage;

/**
 * Receives messages from Firebase
 */
public class FirebaseMessageReceiver extends FirebaseMessagingService {

    /**
     * Handle an incoming FCM Push Notification
     * @param remoteMessage FCM Message
     */
    @Override
    public void onMessageReceived(@NonNull RemoteMessage remoteMessage) {
        boolean isReceived = onMessageReceived(this, remoteMessage);

        // If this is not an Ortto originated message, return false so another
        // part of the application can handle it
        if (isReceived) {
            return;
        }

        super.onMessageReceived(remoteMessage);
    }

    /**
     * Handle an incoming FCM push Notification and pass it to Ortto to process
     * @param  context       App Context
     * @param  remoteMessage FCM Message
     * @return bool
     */
    public boolean onMessageReceived(Context context, RemoteMessage remoteMessage) {
        if (Ortto.instance() == null) {
            return false;
        }

        return new PushNotificationHandler(remoteMessage).handleMessage(context);
    }

    /**
     * Handle a new token being generated by GCM and send it to Ortto
     * @param token The new FCM Token
     */
    @Override
    public void onNewToken(@NonNull String token) {
        onNewToken(this, token);
    }

    /**
     * Handle a new token being generated by GCM and send it to Ortto
     * @param context Application Context
     * @param token   The new FCM Token
     */
    public void onNewToken(Context context, @NonNull String token) {
        Ortto.log().info("FirebaseMessageReceiver@onNewToken");
        Ortto.instance().sendRegistrationToServer(token);
    }
}
